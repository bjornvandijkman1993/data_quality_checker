variables:
  regionName: 'eu-west-3'
  bucketName: 'dataqualitychecker'
  applicationName: 'dataquality'

trigger:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'

steps:
- bash: |
    if [ $(Build.SourceBranchName) = "master" ]; then
      echo "Triggered from $(Build.SourceBranchName), deploy to production"
      echo "##vso[task.setvariable variable=environment]production"
    else
      echo "Triggered from $(Build.SourceBranchName), deploy to develop"
      echo "##vso[task.setvariable variable=environment]develop"
    fi
  displayName: 'Determine environment'

- script:
    # Create a zip file
    (cd src && zip ../develop_app.zip ./Dockerfile ./app/*.py ./app/sections -rX)
  displayName: 'Create zip file'

- task: S3Upload@1
  # Upload to S3
  displayName: 'Upload to S3'
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  inputs:
    regionName: $(regionName)
    bucketName: $(bucketName)
    globExpressions: '$(environment)_app.zip'

- task: BeanstalkDeployApplication@1
  # Deploy to EB
  displayName: 'Deploy to EB'
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  inputs:
    regionName: $(regionName)
    applicationName: $(applicationName)
    environmentName: $(environment)
    applicationType: 's3'
    deploymentBundleBucket: $(bucketName)
    deploymentBundleKey: '$(environment)_app.zip'
    versionLabel: $(Build.SourceVersion)
